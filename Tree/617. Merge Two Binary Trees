题目含义：合并两颗二叉树，合并方法是将两颗二叉树以根节点重合的方法放置，有重合的点则相加，否则采用不为空的节点作为新树的值
思路：根据两个节点为空的情况判断
代码：42ms 46ms 76ms 节点全部重新建立
class Solution {
public:
    TreeNode* mergeTrees(TreeNode* t1, TreeNode* t2) {
        if(!t1 && !t2) return NULL;
        if(t1&&t2){
            TreeNode* root = new TreeNode(t1->val+t2->val);
            root->left = mergeTrees(t1->left,t2->left);
            root->right = mergeTrees(t1->right,t2->right);
            return root;
        }else if(t1==NULL){
            TreeNode* root = new TreeNode(t2->val);
            root->left = mergeTrees(NULL,t2->left);
            root->right = mergeTrees(NULL,t2->right);
            return root;
        }else{
            TreeNode* root = new TreeNode(t1->val);
            root->left = mergeTrees(t1->left,NULL);
            root->right = mergeTrees(t1->right,NULL);
            return root;
        }
    }
};


利用原有节点： 42ms 52ms 43ms 与最快一致
class Solution {
public:
    TreeNode* mergeTrees(TreeNode* t1, TreeNode* t2) {
        if(!t1 && !t2) return NULL;
        if(t1&&t2){
            t1->val = t1->val+t2->val;
            t1->left = mergeTrees(t1->left,t2->left);
            t1->right = mergeTrees(t1->right,t2->right);
            return t1;
        }else if(t1==NULL){
            return t2;
        }else{
            return t1;
        }
    }
};
