题目含义：给定一颗二叉树，将其转化为全部在最右侧的“链表式”二叉树
思路1：利用前序遍历得到存有所有节点的queue，再将其连接成链表。
代码：13ms 很慢   时间复杂度：O（N） 空间复杂度：O（N）
class Solution {
public:
    void flatten(TreeNode* root) {
        queue<TreeNode*> que;
        stack<TreeNode*> sta;
        if(!root) return;
        sta.push(root);
        while(!sta.empty()){
            if(root){
                que.push(root);
                sta.push(root);
                root = root->left;
            }else{
                root = sta.top()->right;
                sta.pop();
            }
        }
        int size = que.size();
        root = que.front();
        for(int i = 0;i<size-1;++i){
            TreeNode* temp = que.front();
            que.pop();
            temp->left = NULL;
            temp->right = que.front();
        }
    }
};

思路2：
