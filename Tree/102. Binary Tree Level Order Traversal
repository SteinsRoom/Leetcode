层序遍历：
代码：
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        /*vector<vector<int>> res;
        queue<TreeNode*> current;
        queue<TreeNode*> next;
        if(root) current.push(root);
        while(!current.empty()){
            vector<int> temp;
            while(!current.empty()){
                TreeNode* x = current.front();
                temp.push_back(x->val);
                if(x->left) next.push(x->left);
                if(x->right) next.push(x->right);
                current.pop();
            }
            res.push_back(temp);
            temp.clear();
            swap(current,next);
        }
        return res;*/
        vector<vector<int>> res;
        queue<TreeNode*> que;
        if(root){
           que.push(root);
           que.push(NULL);
        } 
        vector<int> temp;
        while(!que.empty()){
            while(que.front()){
                TreeNode* x = que.front();
                temp.push_back(x->val);
                if(x->left) que.push(x->left);
                if(x->right) que.push(x->right);
                que.pop();
            }
            que.pop();
            res.push_back(temp);
            if(que.empty()) break;
            que.push(NULL);
            temp.resize(0);
        }
        return res;
    }

};
