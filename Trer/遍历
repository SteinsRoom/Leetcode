前序遍历：
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<int> preorderTraversal(TreeNode* root) {
        /*if(root == NULL) return result;
        result.push_back(root->val);
        if(root->left) preorderTraversal(root->left);
        if(root->right) preorderTraversal(root->right);
        return result;*/
        if(root == NULL) return result;
        stack<TreeNode*> S;
        while(true){
            getdeepleft(root,S);
            if(S.empty()) break;
            root = S.top();
            S.pop();
        }
        return result;
}
    void getdeepleft(TreeNode* x,stack<TreeNode*> & S){
        while(x){
            if(x->right) S.push(x->right);
            result.push_back(x->val);
            x = x->left;
        }
    }
private:
    vector<int> result;
        
};
