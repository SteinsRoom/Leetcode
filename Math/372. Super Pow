思路：实现幂次：用递归，幂次分别是n/2,n-n/2;
      计算过程：res = 1，幂次计算分解为res = pow（res,10）*pow(a,num[i])  可以在纸上推演，注意第一个可以套用res = 1的情况，Pow（1,10）*pow(a,num[0])
代码：
class Solution {
public:
    int superPow(int a, vector<int>& b) {
        int size = b.size();
        long long res = 1;
        for(int i = 0;i<size;++i){
            res = pow(res,10)*pow(a,b[i])%1337;
        }
        return res;
    }
    int pow(int base,int n){
        if(n == 0) return 1;
        if(n == 1)return base%1337;
        return pow(base%1337,n/2)*pow(base%1337,n-n/2)%1337;

    }
};
