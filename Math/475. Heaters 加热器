题目含义：
给定一组房子与一组加热器的位置，要求给出加热器的最小半径，使得所有的房子都能被加热器加热。
思路：
针对每一个房子找到与其最近的加热器的距离，返回其最大值。首先用循环找到第一个比house的位置大的heater，然后计算最近的距离。需要注意找到的heater在
边界的情况。
代码：
class Solution {
public:
    int findRadius(vector<int>& houses, vector<int>& heaters) {
        if(houses.size() == 1) return 0;
        sort(houses.begin(),houses.end());
        sort(heaters.begin(),heaters.end());
        int max = 0;
        int j = 0;
        int dis = 0;
        for(int i = 0;i<houses.size();i++){
           while(j<heaters.size() && houses[i]>heaters[j]){
               j++;
           }
            if(j == heaters.size()){
                dis = houses[i]-heaters[j-1];
            }else if(j == 0){
                dis = heaters[j] - houses[i];
            }else if(houses[i]<heaters[j]){
                dis = min(heaters[j]-houses[i],houses[i]-heaters[j-1]);
            }
            if(max <dis) max = dis;
        }
        return max;
    }
};
