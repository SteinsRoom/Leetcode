题目含义：
给定一个二维矩阵，要求计算其中每个元素与其周围的最多8个元素的平均值，并用计算得到的值替换该元素。如果该元素位于矩阵边缘周围元素不足八个则按实际有个元素个数
进行计算，要求返回计算后的矩阵。
思路：
思路很简单，遍历每个元素求平均值，问题在于如何遍历元素周围的元素。这里可以用两个for循环解决，每层循环均从-1到1，加在元素的坐标上则为元素周围的共九个元素。
另外写一个判断元素是否有效的函数则可以计算。
代码：
class Solution {
private: 
    bool valid(int i,int j,vector<vector<int>>& M)
    {
        if (i >=0 && i<M.size() && j>=0 && j<M[0].size())
            return true;
        return false;
    }
public:
    vector<vector<int>> imageSmoother(vector<vector<int>>& M) {
        int row = M.size();
        int col = M[0].size();
        auto S = M;
        for(int i = 0;i<row;i++){
            for(int j = 0;j<col;j++){
                int count = 0;
                int res = 0;
                for(int x= -1;x<2;x++){
                    for(int y = -1;y<2;y++){
                        if(valid(i+x,y+j,M)){
                            count++;
                            res+=M[i+x][j+y];
                        }
                    }
                }
                S[i][j] = res/count;   
            }
        }
        return S;
    }
};
