题目含义：给定一个数组，判定该数组中最大的元素是否大于其余所有元素的两倍，如果是给出最大值在数组中的下标，如果不是返回-1
思路：
遍历数组寻找最大的数，用一个数maxdoublenum存储数组中次最大数的二倍。每次新遍历到的值与最大值作比较，如果大于最大值，则修改当前最大值和最大值下标，并且将之前的max乘以2
作为新的maxdoublenum；如果不是最大数则乘以二与之前的maxdoublenum比较并更新值。
最后判定max与maxdoublenum的大小关系
代码：6ms 没有足够人数比较
class Solution {
public:
    int dominantIndex(vector<int>& nums) {
        int size = nums.size();
        if(size == 1) return 0;
        int index = 0,maxdoublenum = -1,max = nums[0];    
        for(int i = 1;i<size;++i){
            if(nums[i]>max) {maxdoublenum = 2*max;max = nums[i];index = i;}
            else {int temp = 2*nums[i];if(temp>maxdoublenum) maxdoublenum = temp;}    
        }
        if(max>=maxdoublenum) return index;
        else return -1;
    }
};
