思路：设置count记录进位，同时注意加到最后没有节点可遍历时要新添加节点1.
代码：32ms
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        if(l1 == NULL || l2 == NULL) return (l1 == NULL) ? l2:l1;
        ListNode *head1 = new ListNode(0);
        head1->next = l1;
        ListNode *head2 = new ListNode(0);
        head2->next = l2;
        ListNode *p1 = head1->next,*p2 = head2->next;
        int count = 0;
        while(p1!= NULL && p2!=NULL){
            int temp = p1->val+p2->val+count;
            p1->val = temp%10;
            count = temp/10;
            head1 = p1;
            head2 = p2;
            p1 = p1->next;
            p2 = p2->next;          
        }
        if(p1 == NULL && p2!=NULL){
            while(p2!=NULL){
                head1->next = p2;
                int temp  = p2->val+count;
                p2->val = temp%10;
                count = temp/10;
                head1 = p2;
                p2 = p2->next;
            }
            if(count == 1){
                head1->next = new ListNode(1);
            }
        }else if(p2 == NULL && p1!=NULL){
            while(p1!=NULL){
                head1->next = p1;
                int temp = p1->val+count;
                p1->val = temp%10;
                count = temp/10;
                head1 = p1;
                p1 = p1->next;
            }
            if(count == 1){
                head1->next = new ListNode(1);
            }
        }else if(p1 == NULL && p2==NULL && count == 1){
            head1->next = new ListNode(1);
        } 
        return l1;
    }
};
